datasource db {
    provider = "postgresql"

    url = env("POSTGRESQL_URI")
}

generator client {
    provider             = "prisma-client-py"
    interface            = "sync"
    recursive_type_depth = 5
}

model Product {
    id          Int               @id @default(autoincrement())
    name        String
    description String
    image       String
    brand       String?
    category    Json?
    finn_query  String?
    mpns        Mpn[]
    gtins       Gtin[]
    retailers   ProductRetailer[]
    finn_ads    FinnAd[]

    ambiguous_to_id Int?
    ambiguous_to    Product?  @relation("Ambiguities", fields: [ambiguous_to_id], references: [id])
    ambiguities     Product[] @relation("Ambiguities")
}

model Mpn {
    id  Int    @id @default(autoincrement())
    mpn String

    product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
    product_id Int

    @@index([mpn])
    @@index([product_id])
}

model Gtin {
    id   Int    @id @default(autoincrement())
    gtin String @unique

    product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
    product_id Int

    @@index([gtin])
    @@index([product_id])
}

model ProductRetailer {
    name     String
    sku      String
    price    Float
    url      String
    category String

    product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
    product_id Int

    @@id([name, sku])
    @@index([sku])
    @@index([product_id])
}

model PendingUrl {
    id     Int    @id @default(autoincrement())
    domain String
    url    String @unique

    @@index([domain])
}

model FinnAd {
    id        Int    @id
    image     String
    lat       Float
    lng       Float
    price     Float
    timestamp BigInt
    title     String

    product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
    product_id Int

    @@index([product_id])
}
