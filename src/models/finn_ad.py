# Generated by https://quicktype.io

from dataclasses import dataclass
from enum import Enum
from typing import List, Any
from bson import ObjectId

from dataclasses_json import dataclass_json


@dataclass_json
@dataclass(order=True, frozen=True)
class Coordinates(object):
    lat: float
    lon: float


@dataclass_json
@dataclass(order=True, frozen=True)
class Image(object):
    url: str
    path: str
    height: int
    width: int
    aspect_ratio: float


@dataclass_json
@dataclass(order=True, frozen=True)
class Label(object):
    id: str
    text: str
    type: str


@dataclass_json
@dataclass(order=True, frozen=True)
class Price(object):
    amount: int
    currency_code: str


@dataclass_json
@dataclass(order=True, frozen=True)
class FinnAd(object):
    type: str
    id: int
    main_search_key: str
    heading: str
    location: str
    image: Image
    flags: List[str]
    timestamp: int
    coordinates: Coordinates
    ad_type: int
    labels: List[Label]
    extras: List[Any]
    price: Price
    distance: int
    trade_type: str
    image_urls: List[str]
    ad_id: int
    product_id: ObjectId

    @classmethod
    def from_finn_dict(cls, finn_dict: dict, product_id: ObjectId):
        return FinnAd.from_dict(
            {
                **finn_dict,
                "product_id": product_id,
            }
        )
